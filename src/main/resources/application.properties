# Application name
spring.application.name=virtualcourse

# Server configuration
server.port=8180

# Database configuration
db.port=3307
db.name=VirtualCourseDB
db.endpoint=localhost
db.username=root
db.password=admin123

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${db.endpoint}:${db.port}/${db.name}
spring.datasource.username=${db.username}
spring.datasource.password=${db.password}

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.main.banner-mode=off

# SpringDoc configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

# Logging configuration
logging.level.root=WARN
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.com.aptech.virtualcourse=INFO

# Upload file directory
file.upload-dir=src/main/resources/uploads

# PayPal configuration
paypal.client.id=${PAYPAL_CLIENT_ID}
paypal.client.secret=${PAYPAL_CLIENT_SECRET}
paypal.mode=sandbox

# VnPay Payment configuration
vnpay.tmnCode=${VNPAY_TMN_CODE}
vnpay.hashSecret=${VNPAY_HASH_SECRET}
vnpay.baseUrl=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnpay.returnUrl=http://localhost:8080/api/payment/vnpay-return
vnpay.version=2.1.0
vnpay.command=pay
vnpay.currCode=VND
vnpay.locale=vn

# JWT Configuration
jwt.secret=${JWT_SECRET}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8180/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid, profile, email

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Facebook OAuth2 Configuration
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8180/login/oauth2/code/facebook
spring.security.oauth2.client.registration.facebook.scope=email, public_profile

spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v10.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v10.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# JWT token expiration time in milliseconds (86400000 ms = 1 day)
jwt.expirationMs=86400000
